[info]
num_rows = 0
p = 0

[info.challenges]

[columns.public]

[columns.fixed]
q_enable = { aliases = [] }
q_first = { aliases = [] }
q_last = { aliases = [] }

[columns.witness]
srcm forward a = { phase = 0, aliases = [] }
srcm forward b = { phase = 0, aliases = [] }
srcm internal signal c = { phase = 0, aliases = [] }
'step selector for fibo step' = { phase = 0, aliases = [] }
'step selector for last step' = { phase = 0, aliases = [] }

[constraints.polys."fibo step::(a + b) == c => (a + b + -c)"]
c = "q_enable*('step selector for fibo step'*(srcm forward a + srcm forward b - srcm internal signal c))"
[constraints.polys."fibo step::b == next(a) => (b + -next(a))"]
c = "q_enable*('step selector for fibo step'*(srcm forward b - srcm forward a[1]))"
[constraints.polys."fibo step::c == next(b) => (c + -next(b))"]
c = "q_enable*('step selector for fibo step'*(srcm internal signal c - srcm forward b[1]))"
[constraints.polys."last step::(a + b) == c => (a + b + -c)"]
c = "q_enable*('step selector for last step'*(srcm forward a + srcm forward b - srcm internal signal c))"
[constraints.polys."q_first"]
c = "q_first*(1 - 'step selector for fibo step')"
[constraints.polys."q_last"]
c = "q_last*(1 - 'step selector for last step')"



